version: 0.2
env:
  secrets-manager:
    ENV_ACCESS_KEY: UAT_DEPLOYMENT_KEY:UAT_DEPLOYMENT_KEY ## secret_key_param: secret_name:secret_key
    ENV_ACCESS_SECRET: UAT_DEPLOYMENT_SECRET:UAT_DEPLOYMENT_SECRET ## secret_key_param: secret_name:secret_key
phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - $(aws ecr get-login --registry-ids $AWS_ACCOUNT_ID --no-include-email --region $AWS_DEFAULT_REGION)
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...  
      - echo Setting environment name to $ENVIRONMENT_NAME        
      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG --build-arg ENVIRONMENT_NAME=$ENVIRONMENT_NAME  .
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG      
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - echo "$ENVIRONMENT_NAME"
      - |-
          if [ "$ENVIRONMENT_NAME" = "Development" ]; then
            aws ecs update-service --cluster arn:aws:ecs:$AWS_DEFAULT_REGION:$AWS_ACCOUNT_ID:cluster/$CLUSTER_NAME --service "$SERVICE_NAME" --task-definition "$TASK_NAME" --force-new-deployment
          elif [ "$ENVIRONMENT_NAME" = "UAT" ]; then
            aws configure set aws_access_key_id $ENV_ACCESS_KEY --profile deployer
            aws configure set aws_secret_access_key $ENV_ACCESS_SECRET --profile deployer
            aws configure set default.region us-west-2 --profile deployer
            aws ecs update-service --cluster arn:aws:ecs:$AWS_DEFAULT_REGION:$AWS_ACCOUNT_ID:cluster/$CLUSTER_NAME --service "$SERVICE_NAME" --task-definition "$TASK_NAME" --force-new-deployment --profile deployer
          fi
      - echo Writing image definitions file...
      - printf '[{"name":"imageapi-container","imageUri":"%s"}]' $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG > imagedefinitions.json

artifacts:
  files:
    - appspec.yml
    - imagedefinitions.json
